local.file_match "local_files" {
  path_targets = [
    { "__path__" = "/var/log/*.log", },
  ]
  sync_period = "5s"
}

local.file_match "tomcat_logs" {
  path_targets = [
    { "__path__" = "/opt/bitnami/tomcat/logs/localhost_access_log.*.txt", },
    { "__path__" = "/opt/bitnami/tomcat/logs/catalina.*.log", },
    { "__path__" = "/opt/bitnami/tomcat/logs/localhost.*.log", },
  ]
  sync_period = "5s"
}

loki.source.file "tomcat_scrape" {
  targets       = local.file_match.tomcat_logs.targets
  tail_from_end = false
  forward_to    = [loki.write.grafana_loki.receiver]
}

loki.source.file "log_scrape" {
  targets       = local.file_match.local_files.targets
  tail_from_end = false
  forward_to    = [loki.process.filter_logs.receiver]
}

loki.process "tomcat_labeler" {
  stage.static_labels {
    values = {
      app = "tomcat",
    }
  }
  forward_to = [loki.write.grafana_loki.receiver]
}

loki.process "filter_logs" {
  stage.drop {
    source              = ""
    expression          = ".*Connection closed by authenticating user root"
    drop_counter_reason = "noisy"
  }
  forward_to = [loki.write.grafana_loki.receiver]
}

loki.write "grafana_loki" {
  endpoint {
    url = "http://loki-write.new-lgtm.svc.cluster.local:3100/loki/api/v1/push"
    headers = {
      "X-Scope-OrgID" = "1",
    }
  }
}

prometheus.scrape "node_exporter" {
  job_name = "node-exporter"
  targets = [
    {
      __address__ = "node-exporter-prometheus-node-exporter.monitoring.svc.cluster.local:9100",
    },
  ]
  forward_to = [prometheus.remote_write.to_mimir.receiver]
}

prometheus.scrape "kube_state_metrics" {
  job_name = "kube-state-metrics"
  targets = [
    {
      __address__ = "kube-state-metrics.monitoring.svc.cluster.local:8080",
    },
  ]
  forward_to = [prometheus.remote_write.to_mimir.receiver]
}

prometheus.remote_write "to_mimir" {
  endpoint {
    url = "http://mimir-distributor.mimir.svc.cluster.local:8080/api/v1/push"
    headers = {
      "X-Scope-OrgID" = "1",
    }
  }
  

  // 인증이 필요한 경우 주석 해제
  // basic_auth {
  //   username = "my-user"
  //   password = "my-pass"
  // }
}

discovery.kubernetes "pods" {
  role = "pod"

  namespaces {
    own_namespace = false

    names = ["new-lgtm"]
  }

  selectors {
    role  = "pod"
    label = "environment in (production,alloy)"
  }
}

prometheus.scrape "pods" {
  targets    = discovery.kubernetes.pods.targets
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://mimir-distributor.mimir.svc.cluster.local:8080/api/v1/push"
  }
}